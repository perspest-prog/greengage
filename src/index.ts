import { Telegraf, session } from "telegraf"
import { inlineKeyboard, button } from "telegraf/markup"
import { SceneContext, Stage, } from "telegraf/scenes"
import { message } from "telegraf/filters"

import { calculate, order, question, answer, rates, receipt, review } from "./scenes"
import getToken from "./utils/getToken"

const bot = new Telegraf<SceneContext>(getToken())
const scenes = new Stage([calculate, order, question as any, answer, rates, receipt, review])

bot.use(session())
bot.use(scenes.middleware())

bot.action("calc", Stage.enter("CalculateScene") as any)
bot.action("rates", Stage.enter("RatesScene") as any)

bot.action(/deny/, (ctx) => {
    const { id, price } = JSON.parse(ctx.match.input.split(" ").pop())
    
    ctx.scene.enter("ReviewScene", { id })
})
bot.action(/accept/, async (ctx) => {
    const { id, price } = JSON.parse(ctx.match.input.split(" ").pop())
    const { message_id } = await ctx.telegram.sendMessage(
        id,
        "–¢–≤–æ—è –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ <b><i>–æ–¥–æ–±—Ä–µ–Ω–∞</i></b> –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!\n\n" +
        `–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ: <b>${price}‚ÇΩ</b>\n\n` + 
        "–û–ø–ª–∞—Ç–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ:\n\n" +
        "‚Ä¢ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã 2200700829011724\n\n" +
        "‚Ä¢ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ 89261921149\n\n" +
        "üì¶ <i>–î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –ø–æ –ø—Ä–∏–±—ã—Ç–∏—é —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥ –≤ –ö–∏—Ç–∞–µ. –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –º–æ–∂–µ—Ç –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–ª–∏—á–∞—Ç—å—Å—è.</i>\n\n" +
        "‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b><i>–ó–∞–∫–∞–∑ –æ–ø–ª–∞—á–µ–Ω</i></b> –ø–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—É–º–º—ã.",
        {
            parse_mode: "HTML",
            reply_markup: inlineKeyboard([button.callback("–ó–∞–∫–∞–∑ –æ–ø–ª–∞—á–µ–Ω", "order_paid")]).reply_markup
        }
    )
    await ctx.telegram.editMessageReplyMarkup(
        id,
        message_id,
        null,
        inlineKeyboard([button.callback("–ó–∞–∫–∞–∑ –æ–ø–ª–∞—á–µ–Ω", "order_paid " + message_id)]).reply_markup
    )
})

bot.action(/order_paid/, async (ctx) => {
    const message_id = Number(ctx.match.input.split(" ").pop())
    await ctx.telegram.editMessageReplyMarkup(
        ctx.chat.id,
        message_id,
        null,
        {
            inline_keyboard: []
        }
    )
    await ctx.reply(
        "–°—É–ø–µ—Ä!\n" +
        "–í —Ç–µ—á–µ–Ω–∏–∏ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –º–µ–Ω–µ–¥–∂–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–≤–æ–π –ø–ª–∞—Ç–µ–∂ –∏ —è —Å–∫–∏–Ω—É —á–µ–∫ –ø–æ –≤—ã–∫—É–ø—É —Ç–æ–≤–∞—Ä–∞. –≠—Ç–æ –Ω–µ –∑–∞—Å—Ç–∞–≤–∏—Ç —Ç–µ–±—è –¥–æ–ª–≥–æ –∂–¥–∞—Ç—å.\n" + 
        "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª –∏–º–µ–Ω–Ω–æ –Ω–∞—Å!  üôè",
        {
            parse_mode: "HTML"
        }
    )
    await ctx.telegram.sendMessage(
        -4650285032,
        `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${ctx.from.username} –æ–ø–ª–∞—Ç–∏–ª –∑–∞–∫–∞–∑.`,
        inlineKeyboard([button.callback("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫", "receipt " + ctx.from.id)])
    )
})

bot.action(/receipt/, (ctx) => {
    const chat_id = Number(ctx.match.input.split(" ").pop())
    ctx.scene.enter("ReceiptScene", { chat_id })
})

bot.action(/answer/, (ctx) => {
    const id = Number(ctx.match.input.split(" ").pop())
    ctx.scene.enter("AnswerScene", {user_id: id})
})

bot.action("lala", (ctx) => {
    ctx.reply(
        "–ë–µ–∂–∏–º-–±–µ–∂–∏–º!\n" +
        "–¢–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —É—Å–∫–æ—Ä–µ–Ω–∏—é –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–∏–µ–º–∞ –∑–∞—è–≤–∫–∏ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.\n" +
        "–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –≤–∞–∂–Ω–æ–µ, –æ–±—Ä–∞—â–∞–π—Å—è <b>–≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.</b>",
        {
            parse_mode: "HTML"
        }
    )
})

bot.start((ctx) => {
    ctx.replyWithPhoto(
        "AgACAgIAAxkBAAIIPGgjFY6RjdBm7nPNe3wDEsK1bko7AAJK7TEb384ZSTaTGqJlHxYOAQADAgADeQADNgQ",
        {
            caption: "üìå –≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é\n\n" + 
                     "–î–æ—Å—Ç—É–ø–Ω—ã —Ç–∞–∫–∏–µ —É—Å–ª—É–≥–∏ –∫–∞–∫:\n\n" +
                     "–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä\n" +
                     "–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π\n" + 
                     "–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤\n" +
                     "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã\n\n" +
                     "–¢–∞–∫–∂–µ –º—ã –±—É–¥–µ–º –¥–µ—Ä–∂–∞—Ç—å —Ç–µ–±—è –≤ –∫—É—Ä—Å–µ —Å–∞–º—ã—Ö —Å–≤–µ–∂–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –∞–∫—Ü–∏–πüî•",
            reply_markup: inlineKeyboard([
                [button.callback("–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä", "calc")],
                [button.url("–û—Ç–∑—ã–≤—ã", "https://t.me/greenfeedback"), button.url("–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π", "https://t.me/greenmngr")],
                ["zheksnk", "vanyayep"].includes(ctx.from.username) ? [button.callback("–ó–∞–¥–∞—Ç—å –∫—É—Ä—Å—ã", "rates")] : []
            ]).reply_markup
        }
    )
})

bot.on(message("photo"), (ctx) => {
    console.log(ctx.message.photo)
})

bot.launch()
